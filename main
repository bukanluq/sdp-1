// Define pin numbers for the LEDs, the buttons, and the motor
int led1 = D8; // Pin for LED 1
int led2 = D9; // Pin for LED 2
int button1 = D7; // Pin connected to the first push button
int button2 = D6; // Pin connected to the second push button
int motorPin1 = D0; // Input pin 1 for the motor
int motorPin2 = D1; // Input pin 2 for the motor

// Variable to track the current state of the LEDs
int state = 0;

void setup() {
  Serial.begin(115200); // Start serial communication at 115200 baud rate
  pinMode(led1, OUTPUT); // Set LED 1 as an output
  pinMode(led2, OUTPUT); // Set LED 2 as an output
  pinMode(button1, INPUT); // Set the first button pin as an input
  pinMode(button2, INPUT); // Set the second button pin as an input
  pinMode(motorPin1, OUTPUT); // Set the motor pin 1 as an output
  pinMode(motorPin2, OUTPUT); // Set the motor pin 2 as an output
}
 
void loop() {
  int buttonState1 = digitalRead(button1); // Read the state of the first button
  int buttonState2 = digitalRead(button2); // Read the state of the second button

  // Check if the first button is pressed
  if(buttonState1 == HIGH) {
    state = (state + 1) % 4; // Increment the state and wrap around after 3
    // Control LEDs based on the current state using an if-else statement
    // The rest of your code here...
  }

  // Check if the second button is pressed
  if(buttonState2 == HIGH) {
    // Control motor based on the current state using an if-else statement
    if (state == 0) {
      analogWrite(motorPin1, 0); // Motor off
      digitalWrite(motorPin2, LOW);
    } else if (state == 1) {
      analogWrite(motorPin1, 64); // Motor 1/4 speed
      digitalWrite(motorPin2, LOW);
    } else if (state == 2) {
      analogWrite(motorPin1, 128); // Motor half speed
      digitalWrite(motorPin2, LOW);
    } else if (state == 3) {
      analogWrite(motorPin1, 255); // Motor full speed
      digitalWrite(motorPin2, LOW);
    }
    delay(500); // Debounce delay to avoid multiple rapid state changes
    // Wait until the button is released to avoid repeated state changes
    while(digitalRead(button2) == HIGH);
  }
}
